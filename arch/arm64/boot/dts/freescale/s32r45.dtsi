// SPDX-License-Identifier: GPL-2.0-or-later OR MIT
/*
 * Copyright 2017-2022 NXP
 */

/dts-v1/;
#include "s32cc.dtsi"

/ {
	compatible = "nxp,s32r45";

	aliases {
		can4 = &can4;
		can5 = &can5;
		can6 = &can6;
		can7 = &can7;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	cpus {
		cpu-map {
			cluster0 {
				core0 {
					cpu = <&cpu0>;
				};

				core1 {
					cpu = <&cpu1>;
				};
			};

			cluster1 {
				core0 {
					cpu = <&cpu2>;
				};

				core1 {
					cpu = <&cpu3>;
				};
			};
		};

		cpu0: cpu@0 {
			device_type = "cpu";
			compatible = "arm,cortex-a53";
			reg = <0x0>;
			enable-method = "psci";
			next-level-cache = <&cluster0_l2>;
		};

		cpu1: cpu@1 {
			device_type = "cpu";
			compatible = "arm,cortex-a53";
			reg = <0x1>;
			enable-method = "psci";
			next-level-cache = <&cluster0_l2>;
		};

		cpu2: cpu@100 {
			device_type = "cpu";
			compatible = "arm,cortex-a53";
			reg = <0x100>;
			enable-method = "psci";
			next-level-cache = <&cluster1_l2>;
		};

		cpu3: cpu@101 {
			device_type = "cpu";
			compatible = "arm,cortex-a53";
			reg = <0x101>;
			enable-method = "psci";
			next-level-cache = <&cluster1_l2>;
		};
	};

	reserved-memory {
		ddr_errata_reserved: ddr@85000000 {
			reg = <0x0 0x85000000 0x0 0x1000>; /* 4 KB */
			no-map;
		};
	};

	soc {
		siul2@4009c000 {
			compatible = "simple-mfd";
			status = "okay";
			#address-cells = <2>;
			#size-cells = <2>;

				 /* MIDR */
			ranges = <MIDR_SIUL2_0 0 0x0 0x4009c000 0x0 0x10>,
				 <MIDR_SIUL2_1 0 0x0 0x4403c000 0x0 0x10>,

				 /* MSCR 0-101 */
				 <MSCRS_SIUL2_0 0 0x0 0x4009c240 0x0 0x198>,
				 /* MSCR 102-133 */
				 <MSCRS_SIUL2_1 0 0x0 0x4403c3d8 0x0 0x80>,

				 /* IMCR range 512-513 */
				 <IMCRS_SIUL2_0_0 0 0x0 0x4009ca40 0x0 0x8>,
				 /* IMCR range 515-573 */
				 <IMCRS_SIUL2_0_1 0 0x0 0x4009ca4c 0x0 0xec>,
				 /* IMCR range 580-595 */
				 <IMCRS_SIUL2_0_2 0 0x0 0x4009cb50 0x0 0x40>,

				 /* IMCR range 603-603 */
				 <IMCRS_SIUL2_1_0 0 0x0 0x4403cbac 0x0 0x4>,
				 /* IMCR range 605-606 */
				 <IMCRS_SIUL2_1_1 0 0x0 0x4403cbb4 0x0 0x8>,
				 /* IMCR range 608-612 */
				 <IMCRS_SIUL2_1_2 0 0x0 0x4403cbc0 0x0 0x14>,
				 /* IMCR range 615-617 */
				 <IMCRS_SIUL2_1_3 0 0x0 0x4403cbdc 0x0 0xc>,
				 /* IMCR range 619-619 */
				 <IMCRS_SIUL2_1_4 0 0x0 0x4403cbec 0x0 0x4>,
				 /* IMCR range 622-623 */
				 <IMCRS_SIUL2_1_5 0 0x0 0x4403cbf8 0x0 0x8>,
				 /* IMCR range 626-626 */
				 <IMCRS_SIUL2_1_6 0 0x0 0x4403cc08 0x0 0x4>,
				 /* IMCR range 632-633 */
				 <IMCRS_SIUL2_1_7 0 0x0 0x4403cc20 0x0 0x8>,
				 /* IMCR range 635-636 */
				 <IMCRS_SIUL2_1_8 0 0x0 0x4403cc2c 0x0 0x8>,
				 /* IMCR range 643-643 */
				 <IMCRS_SIUL2_1_9 0 0x0 0x4403cc4c 0x0 0x4>,
				 /* IMCR range 646-647 */
				 <IMCRS_SIUL2_1_10 0 0x0 0x4403cc58 0x0 0x8>,
				 /* IMCR range 649-649 */
				 <IMCRS_SIUL2_1_11 0 0x0 0x4403cc64 0x0 0x4>,
				 /* IMCR range 651-651 */
				 <IMCRS_SIUL2_1_12 0 0x0 0x4403cc6c 0x0 0x4>,
				 /* IMCR range 654-655 */
				 <IMCRS_SIUL2_1_13 0 0x0 0x4403cc78 0x0 0x8>,
				 /* IMCR range 657-669 */
				 <IMCRS_SIUL2_1_14 0 0x0 0x4403cc84 0x0 0x34>,
				 /* IMCR range 672-674 */
				 <IMCRS_SIUL2_1_15 0 0x0 0x4403ccc0 0x0 0xc>,
				 /* IMCR range 681-681 */
				 <IMCRS_SIUL2_1_16 0 0x0 0x4403cce4 0x0 0x4>,
				 /* IMCR range 685-685 */
				 <IMCRS_SIUL2_1_17 0 0x0 0x4403ccf4 0x0 0x4>,
				 /* IMCR range 694-695 */
				 <IMCRS_SIUL2_1_18 0 0x0 0x4403cd18 0x0 0x8>,
				 /* IMCR range 696 - 727 (EIRQs) */
				 <IMCRS_SIUL2_1_EIRQS 0 0x0 0x4403cd20 0x0 0x80>,
				 /* IMCR range 728-731 */
				 <IMCRS_SIUL2_1_19 0 0x0 0x4403cda0 0x0 0x10>,
				 /* IMCR range 749-751 */
				 <IMCRS_SIUL2_1_21 0 0x0 0x4403cdf4 0x0 0xc>,
				 /* IMCR range 754-760 */
				 <IMCRS_SIUL2_1_22 0 0x0 0x4403ce08 0x0 0x1c>,
				 /* IMCR range 771-774 */
				 <IMCRS_SIUL2_1_23 0 0x0 0x4403ce4c 0x0 0x10>,
				 /* IMCR range 777-785 */
				 <IMCRS_SIUL2_1_24 0 0x0 0x4403ce64 0x0 0x24>,

				 /* Output pads */
				 <OPADS_SIUL2_0 0 0x0 0x4009d700 0x0 0x10>,
				 <OPADS_SIUL2_1 0 0x0 0x4403d700 0x0 0x14>,

				 /* Input pads */
				 <IPADS_SIUL2_0 0 0x0 0x4009d740 0x0 0x10>,
				 <IPADS_SIUL2_1 0 0x0 0x4403d740 0x0 0x14>,

				/* EIRQs */
				 <EIRQS_SIUL2_1 0 0x0 0x4403c010 0x0 0xb4>;

			pinctrl: siul2-pinctrl@4009c240 {
				compatible = "nxp,s32r45-siul2-pinctrl",
					     "nxp,s32cc-siul2-pinctrl";
				#pinctrl-cells = <2>;

				reg =
				      /* MSCR 0-101 */
				      <MSCRS_SIUL2_0 0 0x0 0x198>,

				      /* MSCR 102-133 */
				      <MSCRS_SIUL2_1 0 0x0 0x80>,

				      /* IMCR range 512-513 */
				      <IMCRS_SIUL2_0_0 0 0x0 0x8>,
				      /* IMCR range 515-573 */
				      <IMCRS_SIUL2_0_1 0 0x0 0xec>,
				      /* IMCR range 580-595 */
				      <IMCRS_SIUL2_0_2 0 0x0 0x40>,

				      /* IMCR range 603-603 */
				      <IMCRS_SIUL2_1_0 0 0x0 0x4>,
				      /* IMCR range 605-606 */
				      <IMCRS_SIUL2_1_1 0 0x0 0x8>,
				      /* IMCR range 608-612 */
				      <IMCRS_SIUL2_1_2 0 0x0 0x14>,
				      /* IMCR range 615-617 */
				      <IMCRS_SIUL2_1_3 0 0x0 0xc>,
				      /* IMCR range 619-619 */
				      <IMCRS_SIUL2_1_4 0 0x0 0x4>,
				      /* IMCR range 622-623 */
				      <IMCRS_SIUL2_1_5 0 0x0 0x8>,
				      /* IMCR range 626-626 */
				      <IMCRS_SIUL2_1_6 0 0x0 0x4>,
				      /* IMCR range 632-633 */
				      <IMCRS_SIUL2_1_7 0 0x0 0x8>,
				      /* IMCR range 635-636 */
				      <IMCRS_SIUL2_1_8 0 0x0 0x8>,
				      /* IMCR range 643-643 */
				      <IMCRS_SIUL2_1_9 0 0x0 0x4>,
				      /* IMCR range 646-647 */
				      <IMCRS_SIUL2_1_10 0 0x0 0x8>,
				      /* IMCR range 649-649 */
				      <IMCRS_SIUL2_1_11 0 0x0 0x4>,
				      /* IMCR range 651-651 */
				      <IMCRS_SIUL2_1_12 0 0x0 0x4>,
				      /* IMCR range 654-655 */
				      <IMCRS_SIUL2_1_13 0 0x0 0x8>,
				      /* IMCR range 657-669 */
				      <IMCRS_SIUL2_1_14 0 0x0 0x34>,
				      /* IMCR range 672-674 */
				      <IMCRS_SIUL2_1_15 0 0x0 0xc>,
				      /* IMCR range 681-681 */
				      <IMCRS_SIUL2_1_16 0 0x0 0x4>,
				      /* IMCR range 685-685 */
				      <IMCRS_SIUL2_1_17 0 0x0 0x4>,
				      /* IMCR range 694-695 */
				      <IMCRS_SIUL2_1_18 0 0x0 0x8>,
				      /* IMCR range 728-731 */
				      <IMCRS_SIUL2_1_19 0 0x0 0x10>,
				      /* IMCR range 749-751 */
				      <IMCRS_SIUL2_1_21 0 0x0 0xc>,
				      /* IMCR range 754-760 */
				      <IMCRS_SIUL2_1_22 0 0x0 0x1c>,
				      /* IMCR range 771-774 */
				      <IMCRS_SIUL2_1_23 0 0x0 0x10>,
				      /* IMCR range 777-785 */
				      <IMCRS_SIUL2_1_24 0 0x0 0x24>;

				/* MSCR range */
				nxp,pins = <0   101
					    102 133
				/* IMCR range */
					    512 513
					    515 573
					    580 595
					    603 603
					    605 606
					    608 612
					    615 617
					    619 619
					    622 623
					    626 626
					    632 633
					    635 636
					    643 643
					    646 647
					    649 649
					    651 651
					    654 655
					    657 669
					    672 674
					    681 681
					    685 685
					    694 695
					    728 731
					    749 751
					    754 760
					    771 774
					    777 785>;
				status = "okay";
			};

			gpio: siul2-gpio@4009d700 {
				compatible = "nxp,s32r-siul2-gpio", "nxp,s32cc-siul2-gpio";

				reg = <OPADS_SIUL2_0       0 0x0 0x10>,
				      <OPADS_SIUL2_1       0 0x0 0x14>,
				      <IPADS_SIUL2_0       0 0x0 0x10>,
				      <IPADS_SIUL2_1       0 0x0 0x14>,
				      <EIRQS_SIUL2_1       0 0x0 0xb4>,
				      <IMCRS_SIUL2_1_EIRQS 0 0x0 0x80>;
				reg-names = "opads0", "opads1", "ipads0",
					    "ipads1", "eirqs", "eirq-imcrs";

				#gpio-cells = <2>;
				gpio-controller;
					/* GPIO 0-101 */
				gpio-ranges = <&pinctrl 0   0   102>,
					/* GPIO 102-133 */
					      <&pinctrl 102 102 32>;

				interrupt-controller;
				#interrupt-cells = <2>;
				interrupts = <GIC_SPI 237 IRQ_TYPE_LEVEL_HIGH>;
				status = "okay";
			};
		};

		can4: flexcan@44000000 {
			compatible = "nxp,s32cc-flexcan";
			reg = <0x0 0x44000000 0x0 0x4000>;
			interrupts = <GIC_SPI 192 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 193 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 194 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 195 IRQ_TYPE_LEVEL_HIGH>;
			interrupt-names = "state", "berr", "mb_0-7", "mb_8-127";
			clocks = <&clks S32CC_SCMI_CLK_FLEXCAN_REG>,
				 <&clks S32CC_SCMI_CLK_FLEXCAN_CAN>;
			clock-names = "ipg", "per";
			status = "disabled";
		};

		can5: flexcan@44004000 {
			compatible = "nxp,s32cc-flexcan";
			reg = <0x0 0x44004000 0x0 0x4000>;
			interrupts = <GIC_SPI 196 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 197 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 198 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 199 IRQ_TYPE_LEVEL_HIGH>;
			interrupt-names = "state", "berr", "mb_0-7", "mb_8-127";
			clocks = <&clks S32CC_SCMI_CLK_FLEXCAN_REG>,
				 <&clks S32CC_SCMI_CLK_FLEXCAN_CAN>;
			clock-names = "ipg", "per";
			status = "disabled";
		};

		can6: flexcan@44008000 {
			compatible = "nxp,s32cc-flexcan";
			reg = <0x0 0x44008000 0x0 0x4000>;
			interrupts = <GIC_SPI 200 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 201 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 202 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 203 IRQ_TYPE_LEVEL_HIGH>;
			interrupt-names = "state", "berr", "mb_0-7", "mb_8-127";
			clocks = <&clks S32CC_SCMI_CLK_FLEXCAN_REG>,
				 <&clks S32CC_SCMI_CLK_FLEXCAN_CAN>;
			clock-names = "ipg", "per";
			status = "disabled";
		};

		can7: flexcan@4400c000 {
			compatible = "nxp,s32cc-flexcan";
			reg = <0x0 0x4400c000 0x0 0x4000>;
			interrupts = <GIC_SPI 204 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 205 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 206 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 207 IRQ_TYPE_LEVEL_HIGH>;
			interrupt-names = "state", "berr", "mb_0-7", "mb_8-127";
			clocks = <&clks S32CC_SCMI_CLK_FLEXCAN_REG>,
				 <&clks S32CC_SCMI_CLK_FLEXCAN_CAN>;
			clock-names = "ipg", "per";
			status = "disabled";
		};
	};
};

&pinctrl {
	sd0_pins_default: sd0_default {
		sd0_default_grp0 {
			pinmux = <S32CC_PINMUX(46, FUNC1)>,
				 <S32CC_PINMUX(56, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_FAST_SLEW_150MHZ>;
			bias-pull-down;
		};

		sd0_default_grp1 {
			pinmux = <S32CC_PINMUX(47, FUNC1)>,
				 <S32CC_PINMUX(48, FUNC1)>,
				 <S32CC_PINMUX(49, FUNC1)>,
				 <S32CC_PINMUX(50, FUNC1)>,
				 <S32CC_PINMUX(51, FUNC1)>,
				 <S32CC_PINMUX(52, FUNC1)>,
				 <S32CC_PINMUX(53, FUNC1)>,
				 <S32CC_PINMUX(54, FUNC1)>,
				 <S32CC_PINMUX(55, FUNC1)>;
			output-enable;
			input-enable;
			slew-rate = <S32CC_FAST_SLEW_150MHZ>;
			bias-pull-up;
		};

		sd0_default_grp2 {
			pinmux = <S32CC_PINMUX(57, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_FAST_SLEW_150MHZ>;
		};

		sd0_default_grp3 {
			pinmux = <S32CC_PINMUX(515, FUNC2)>,
				 <S32CC_PINMUX(516, FUNC2)>,
				 <S32CC_PINMUX(517, FUNC2)>,
				 <S32CC_PINMUX(518, FUNC2)>,
				 <S32CC_PINMUX(519, FUNC2)>,
				 <S32CC_PINMUX(520, FUNC2)>,
				 <S32CC_PINMUX(521, FUNC2)>,
				 <S32CC_PINMUX(522, FUNC2)>,
				 <S32CC_PINMUX(523, FUNC2)>;
		};
	};
};

&stm0 {
	status = "okay";
};

&stm1 {
	status = "okay";
};

&ddr_errata {
	memory-region = <&ddr_errata_reserved>;
	status = "okay";
};

&pcie0 {
	status = "okay";
};

&pcie1 {
	interrupts =  <GIC_SPI 209 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 208 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 210 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 211 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 212 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 217 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 218 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 219 IRQ_TYPE_LEVEL_HIGH>;
	interrupt-names = "link_req_stat", "dma", "msi",
				"phy_link_down", "phy_link_up", "misc",
				"pcs", "tlp_req_no_comp";
	#interrupt-cells = <1>;
	interrupt-map-mask = <0 0 0 0x7>;
	interrupt-map = <0 0 0 1 &gic 0 0 0 213 4>,
				<0 0 0 2 &gic 0 0 0 214 4>,
				<0 0 0 3 &gic 0 0 0 215 4>,
				<0 0 0 4 &gic 0 0 0 216 4>;
	msi-parent = <&gic>;
};
